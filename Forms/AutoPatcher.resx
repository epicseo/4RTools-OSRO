<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="downloadWorker.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAGRkAAAEAIABQCgAAFgAAACgAAAAZAAAAMgAAAAEAIAAAAAAAxAkAAMIOAADCDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAABkAAAAdAAAAGQAA
        AAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAABAAAC0hCxeCMBwzxjwpS+tGMmD8SjZl/0YzXvw/Kk7qMRw1wyAKGH0MAAAoAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAAJCgSJaVFMlr9Z1GW/3dd
        vP96Xsz/f17T/4Be0/+AX9P/e17M/3Rauv9kUJP/RDBX+iYRJJ8IAAAdAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAFgAIWUAtU/BzW63/gWbR/39Y0f95S8b/dkXA/3ZGwP93SML/d0fC/3lG
        wf97R8T/gFTM/35iyv9rV6P/PChK6RYABk8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGwkSblE+
        dP9+Yc7/eE7L/3NFv/94TMb/f1bQ/4Zf1/+JZN//jGfi/4xl4P+IWtj/hFDP/3xGxP9yQL3/eFHI/3lh
        xv9NOWj/GgUNYAAAAAAAAAAAAAAAAAAAAAAAAAAAFQMJU1ZDfv+CYdP/bkC8/3NJxv+CYN3/jG7r/5V7
        9P+Zgfn/m4H7/5uC+v+bgfn/moD5/5h99f+Scuv/h17Z/3hIx/9vRsb/eWHQ/007av8RAABHAAAAAAAA
        AAAAAAAAAAAAGUg0ZvCDYtf/c0bC/3pX0v+Od/D/l4H5/5iB+P+YgPf/mX/2/5l9+P+Zfvb/moD2/5uB
        9v+ag/f/moT6/5mD+v+RdPD/gVvc/3NJyv97ZMv/PitP6AAAABEAAAAAAAAAADQfPpiAYMr/eE7L/4Ji
        3v+UfPb/l3/2/5Z+9P+Xf/X/mX/2/5p/9v+cgP3/nID//5qA+v+YgPb/mID1/5Z+9P+VfvP/l4D2/5h/
        +P+IZeT/elfO/3Bcr/8oFiiJAAAAAAAAABBbQoP2hWHc/4Nk3v+Uffn/lXz1/5V89P+WfvX/l3/2/5h+
        9v+hhP//lnvl/4Vtzf+Ue+3/nYT//5Z99f+VffP/lX3z/5V98/+VfvT/mH/6/4Vl4P99Ytb/RjRj7gAA
        AAokFB5Me2C6/4Nl4v+Tevb/lHz2/5d99f+YffT/mH70/5d/9v+dhP//d163/0YyWf9QO2f/RTFe/3hh
        xv+chP//lX30/5Z+9P+Xf/X/ln70/5V99f+WfPb/iGfm/2RNnf8TAwdARzZFiJV+2v+NcvD/lXz1/5Z9
        9f+YffX/mX70/5l/9P+dhf//jHXl/0Yvav+HbOL/noT//4Fnzv9GMmf/lX71/5mD/v+WffT/ln70/5h/
        9f+WfvT/ln72/5Jz9P+Ebc3/MCIueFVIVLClk/D/j3T0/5V89P+WfPT/mH30/5h+9P+ehP//jnXn/043
        b/97aqj/qIn//4Nn2P+2nP//a1qK/1pDg/+VfvH/moL//5V89P+YfvT/mH/0/5V99P+Sdvf/novk/0Az
        QJ5aTli4sKL7/4909v+WfPX/mH30/5d+9P+dg///fmfF/zkjPv8lER//XU9k/41/q/9NO1z/j4eq/009
        UP8lEB7/PypJ/4p22f+bgv7/lXz0/5d+8/+VffP/knf4/62h7P9ENj6nTUNJsras9P+QdPj/lnz0/5uA
        +f+hhv//j3fm/zomPv8uGib/MR4u/ycRIf8lDxr/KRQg/yALF/8oEyT/MR0v/ygTH/9HNlf/moT3/5uA
        //+VffT/lX3z/5Z8+/+tpeD/NycxoTcmLYu3sOD/lHn8/5V6+P+OdOT/gGzC/3Fkmv8hDRT/NSA0/0Uv
        T/9UP2//YUqH/2RNjP9cRn//Tjdm/z4pSf8vGiz/Ig4U/31tt/+Ba9H/lHvx/5Z99f+gif//p6HF/x8K
        FnsJAAZQnpqu/6iV//+jj/b/jnPv/1A+b/83Jjz/cVmo/5F44v+chPX/pIv//6WM//+li///pIv//6CI
        /f+YgfL/i3ba/2lVmf8yIDf/XEeC/5Z79/+Pc/T/saL//4R9jP8AAABDAAAAEmNYYPi/t///pJXz/6aV
        9P+TevD/fWXB/6KH//+Kcdz/mYD4/5uB9/+bgPb/m3/2/5uA9v+cgvj/mYD2/4tz3/+ii///dFu0/5x+
        9//Ozvn/wbr3/7qw7f9HN0HyAAAADAAAAAAeDBmgpJy6/83K///n8/T/m4H2/6KH//+FatD/LRYl/4Vr
        0/+ehP//mn/2/5p+9v+agPb/oIb//3thvP8sFiv/kHfk/6KG//+Zf/b/3er2/+fs//+QhJn/FQARkQAA
        AAAAAAAAAAAAHUo6Q/TJxu//oon8/5R59P+chP7/g2vP/ywWKP+GbNP/nYL+/5t+9v+Zffb/mH/1/6CG
        //90XLL/MBkx/5F35/+ZgPr/kXP1/6OJ//+/utj/NCAx7gAAABUAAAAAAAAAAAAAAAAFAAJdZ15p/8XG
        /v+Uevv/kHbz/5V98/+Kctv/mX70/5d89f+afvX/l3z1/5R78/+XfvX/lHvv/4xx3P+Wffb/kHTz/6CH
        ///Lxe3/UkBN/wYACVAAAAAAAAAAAAAAAAAAAAAAAAAAAAwADHlrZnD/x87z/6KP/v+MbvT/l3z8/5d8
        9P+Vefb/n4f1/7Sl7/+NcfD/kXf0/5d+9/+YfPv/jXH1/66b///HxeP/WEZS/wsAC2wAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAABwAHZUs+S/autMX/vrj//6KL//+Qc/f/jW/3/5Fy8v/S1PH/4OX4/52H
        9P+OcPj/qZP//8bA/v+sqLb/Qi498ggAC1sAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAtIw4js2pkbP+urMD/wbnt/7uu//+3qf//5Oz///D2///Kuv7/wLXr/6qltv9gU1z/HwcdrAAA
        ACcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5HwgekEs9
        R9JrYmr0e3R//31yh/96boL/bmBs80s7RM8dARmMAAAAMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgAAACMAAAAnAAAAIwAA
        ABEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/8H/gP4AP4D4AA+A8AAHgOAA
        A4DAAAGAgAAAgIAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAACAgAAAgMAA
        AYDgAAOA8AAHgPgAD4D+AD+A/8H/gA==
</value>
  </data>
</root>